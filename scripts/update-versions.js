const fs=require("fs"),path=require("path"),crypto=require("crypto"),{glob:glob}=require("glob");function calculateFileHash(e){const s=fs.readFileSync(e);return crypto.createHash("md5").update(s).digest("hex").slice(0,8)}async function updateVersions(){const e=path.join(__dirname,"..","version.json"),s=JSON.parse(fs.readFileSync(e,"utf8")),a=await glob("**/*.css",{ignore:["node_modules/**","**/node_modules/**"],cwd:path.join(__dirname,"..")});for(const e of a){const a=calculateFileHash(path.join(__dirname,"..",e)),o=path.basename(e,".css");s.assets.css[o]&&(s.assets.css[o]=a)}const o=await glob("**/*.js",{ignore:["node_modules/**","**/node_modules/**"],cwd:path.join(__dirname,"..")});for(const e of o){const a=calculateFileHash(path.join(__dirname,"..",e)),o=path.basename(e,".js");s.assets.js[o]&&(s.assets.js[o]=a)}s.version=calculateFileHash(e),fs.writeFileSync(e,JSON.stringify(s,null,2)),console.log("Version file updated successfully")}updateVersions().catch(console.error);